local HWIDTableWhitelist = loadstring(game:HttpGet("https://pastebin.com/raw/0tp8QssH"))()
local HWIDTableBlacklist = loadstring(game:HttpGet("https://pastebin.com/raw/02nrGX2M"))()
local HWID = game:GetService("RbxAnalyticsService"):GetClientId()
local Player = game.Players.LocalPlayer

-- Made by $ melon#5256

--// Check
for Index, IDCheck in pairs(HWIDTableWhitelist) do
if IDCheck ~= HWID then
setclipboard(HWID)
print("Your key was copied to your clipboard")
end
end

--//-- Blacklist check
for Index, BlacklistID in pairs(HWIDTableBlacklist) do
if BlacklistID == HWID then
Player:Kick("Device is blacklisted from MelonHub, direct message $ melon#5256 to appeal for a whitelist")
end

--//-- Whitelist check
for Index, WhitelistID in pairs(HWIDTableWhitelist) do
if WhitelistID == HWID then

---------------------------------
local PlayerGUI = Player.PlayerGui
local MelonHubV1MainGui = Instance.new("ScreenGui",PlayerGUI)
local MelonHubBackGround = Instance.new("Frame", MelonHubV1MainGui)
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint", MelonHubBackGround)
---------------------------------
MelonHubV1MainGui.Name = "MelonHubV1"
MelonHubBackGround.Name = "MelonHubBackground"
MelonHubBackGround.Position = Vector2.new({0, 200},{0, 300})
UIAspectRatioConstraint.AspectRatio = 1.074
UIAspectRatioConstraint.AspectType = Enum.AspectType.FitWithinMaxSize
UIAspectRatioConstraint.DominantAxis = Enum.DominantAxis.Width
--------------------------------
end
end
end
